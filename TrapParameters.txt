1				[q_lc]  = e  	  		=> Charge of the laser cooled ions 
9.0				[m_lc]  = au  			=> mass of the laser cooled ions  1.007 276 466 77       2.0151
1				[q_sc]  = e  	  		=> Charge of the sympathetically cooled ions 
2				[m_sc]  = au  			=> mass of the sympathetically cooled ions
1				[q_int]  = e  	  		=> Charge of the intermediate ions 
3.0				[m_int]  = au  		=> mass of the intermediate ions
0.1        			[U0] = V			=> DC voltage, U0min
130				[V0] = V			=> RF amplitude, V0min
1.3e7				[rf] = Hz			=> RF confinement frequency
0.385e6				[freq_z] = Hz			=> z trapping frequency for q=1 and m=1
0				[random_ions]			=> 1 if initial position are randomized, 0 to load from a file
10				[seed]			=> Seed of the random number generators on the CPU and GPU
5.0e-4				[rmax] = m			=> Radious for the initialization of the ions
1.0e-3				[zmax] = m			=> max |z| for the initialization of the ions
3.5e-3				[rkill] = m			=> maximum radius for an ion to stay alive
6.0e-2				[zkill] = m			=> maximum |z| for an ion to stay alive
0.0				[ta] = s			=> Inital time
1.2820512820512800e-9				[dt] = s			=> time step for integration
10000				[n_saved_points_start]		=> number of saved points (forced crystallisation)
1e-8				[save_time_constant]	=> time between saved points 
1000				[n_saved_points_lc]		=> number of saved points (first laser cooling period)
1e-8			[save_time_constant]    => time between saved points				 
200				[n_SavePeriods_lc]		=> number of saving periods
1e-6				[Integr_Params_lc.unsaved_time]	=> Integr_Params_lc.unsaved_time Time length of unsaved period     
5000				[n_saved_points_int]		=> number of saved points 
1e-8				[save_time_constant]		=> time between saved points
20000				[n_SavePeriods_int]		=> number of saving periods
1e-5				[unsaved_time]	
1				[save_energie]			=> true or false
0				[save_dat]			=> true or false
0          			[save_trajtronq]		=> true or false
1				[save_traj_sc]			=> true or false
0				[save_traj_int]			=> true or false
0				[save_vz_sc]			=> true or false
0				[save_vmd]			=> true or false	
1				[save_fluo] saves the fluorescence event time
1e-7				[fluo_time_constant]		=> time constant for fluo event number saving
BeH1920_Sphere2.cloud_ini 		inital ion input file name
BeH21920_0.6mm_a5_rf60_10			[outfilename]			=> nom du fichier de sortie 
1919				[n_ions_lc]	 		=> Initial number of Ions 
1				[n_ions_sc]	 		=> Initial number of Ions
0				[n_ions_int]			=> Initial number of Ions
1.0				[Temperature_lc]=K 		=> Inital temperature of the laser cooled ions
1.0e6				drag coefficient
313.13e-9			wavelength
19.4e6				transition width (Hz)
1				degenererescence of ground state 2s1/2
1				degenerescence of excited state 2p3/2
-1.0				detuning in width unit
1.5				saturation parameter on beam axis
0.0				theta_k    direction of the wave vector
0.0				phi_k
0.001				beam waist
0				r_waist.x
0				r_waist.y
0				r_waist.z
0.0				xini
0.0				yini
0.0006				zini
5.0e-6				delta_xini
5.0e-6				delta_yini		
5.0e-6				delta_zini
0.00				initial energy of the sympathetically cooled ions along the z axis (eV)
0.00001				energy spread (eV)
2.0				[temp_lc] temperature for thermalization of laser cooled ions
0				[thermalize_lc]
0.100				[temp_sc] temperature for thermalization of sympathetically cooled ions
0				[thermalize_sc]
1				[reinitialize_sc]  do not or do keep the sc cooled ions as in the input file
1           	[numgpumax] Nombres de GPU a utiliser (0 pour tous, entier positif pour ne pas utiliser plus qu'un certain nombre)
1				[deviceOffset] First GPU to use (0 for first GPU) 
1				[variable_timestep] Use a fixed timestep (0) or a variable one (1) such that collisions are always well described
1				[save_timestep] Save timestep changes or not
0				Potentiel Simion
0				Pseudo Potentiel
27				[heure_max] Heure au dela de laquelle le programme s'arretera a la fin de la prochaine periode de sauvegarde (heure_max negatif ou >24 fait que le programme ne s'arrette pas)
0				[daysToSkip] Days to skip before stopping after heure_max
1				[autostop] Stop automatically when SC ion has been captured
1e-23				[StopLimit]